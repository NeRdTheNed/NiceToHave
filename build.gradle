plugins {
	id 'fabric-loom' version '0.2.6-SNAPSHOT'
	id 'maven-publish'
	id "org.jetbrains.kotlin.jvm" version "1.3.41"
	id "com.wynprice.cursemaven" version "2.1.0"
}

repositories {
	jcenter()
	maven {
		name = 'CottonMC'
		url = 'http://server.bbkr.space:8081/artifactory/libs-release'
	}
	maven {
		name = 'JitPack'
		url = 'https://jitpack.io'
	}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
	compileOnly(group: "net.fabricmc", name: "fabric-loader", version: "${project.loader_version}")

	// Fabric API. This is technically optional, but you probably want it anyway.
	modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modCompile(group: "net.fabricmc", name: "fabric-language-kotlin", version: "1.3.60+build.1")
	compileOnly(group: "net.fabricmc", name: "fabric-language-kotlin", version: "1.3.60+build.1")

	/*
	compileOnly ('com.github.TerraformersMC:Terrestria:v1.0.11') {
		exclude group: 'net.fabricmc.fabric-api'
	}
	modCompileOnly ('com.github.TerraformersMC:Traverse:v2.0.8') {
		exclude group: 'net.fabricmc.fabric-api'
	}
	*/

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
	modApi ("io.github.cottonmc:Jankson:${project.jankson_version}") {
		exclude group: 'net.fabricmc.fabric-api'
	}
	include "io.github.cottonmc:Jankson:${project.jankson_version}"

	modApi ("io.github.cottonmc:LibCD:${project.libcd_version}") {
		exclude group: 'net.fabricmc.fabric-api'
	}
	include "io.github.cottonmc:LibCD:${project.libcd_version}"

	modApi("com.github.RedstoneParadox:paradox-config:v${project.pconfig_version}") {
		exclude group: 'net.fabricmc.fabric-api'
		exclude group: 'net.fabricmc.fabric-language-kotlin'
	}
	include "com.github.RedstoneParadox:paradox-config:v${project.pconfig_version}"
	modApi ("io.github.prospector:modmenu:1.7.15-unstable.1.15-pre1+build.13") {
		transitive = false
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
